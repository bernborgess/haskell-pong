name: build
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: GHC ${{ matrix.ghc-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        ghc-version: ['9.4.8']
        include:
          - os: macos-latest
            ghc-version: '9.4.8'

    steps:
      - uses: actions/checkout@v4

      # System dependency installation
      - name: Install Ubuntu dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            pkg-config \
            libsdl2-dev \
            libsdl2-ttf-dev \
            libsdl2-image-dev \
            libsdl2-mixer-dev

      - name: Install macOS dependencies
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install sdl2 sdl2_ttf sdl2_image sdl2_mixer

      - name: Install Windows dependencies
        if: matrix.os == 'windows-latest'
        run: |
          choco install msys2 -y --params="/NoUpdate"
          C:\msys64\usr\bin\bash -lc "pacman -Syu --noconfirm"
          C:\msys64\usr\bin\bash -lc "pacman -S --noconfirm --needed \
            mingw-w64-x86_64-toolchain \
            mingw-w64-x86_64-SDL2 \
            mingw-w64-x86_64-SDL2_ttf \
            mingw-w64-x86_64-SDL2_image \
            mingw-w64-x86_64-SDL2_mixer \
            pkg-config"
          echo "C:\msys64\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Append
          echo "PKG_CONFIG_PATH=C:\msys64\mingw64\lib\pkgconfig" >> $env:GITHUB_ENV

      - name: Set up GHC ${{ matrix.ghc-version }}
        uses: haskell-actions/setup@v2
        id: setup
        with:
          ghc-version: ${{ matrix.ghc-version }}
          cabal-version: 'latest'
          cabal-update: true

      - name: Configure the build
        run: |
          cabal configure --enable-tests --enable-benchmarks --disable-documentation
          cabal build all --dry-run

      - name: Restore cached dependencies
        uses: actions/cache/restore@v4
        id: cache
        env:
          key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-cabal-${{ steps.setup.outputs.cabal-version }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
          restore-keys: ${{ env.key }}-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: cabal build all --only-dependencies

      - name: Save cached dependencies
        uses: actions/cache/save@v4
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ steps.cache.outputs.cache-primary-key }}

      - name: Build
        run: cabal build all

      - name: Run tests
        run: cabal test all

      - name: Check cabal file
        run: cabal check

      - name: Build documentation
        run: cabal haddock all --disable-documentation